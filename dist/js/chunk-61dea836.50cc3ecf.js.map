{"version":3,"sources":["webpack:///./node_modules/echarts-wordcloud/src/wordCloud.js","webpack:///./node_modules/echarts-wordcloud/src/WordCloudSeries.js","webpack:///./node_modules/echarts-wordcloud/src/layout.js","webpack:///./node_modules/echarts/theme/macarons.js","webpack:///./node_modules/echarts-wordcloud/index.js","webpack:///./src/pages/person_analysis/wordcloud1.js","webpack:///./node_modules/echarts-wordcloud/src/WordCloudView.js"],"names":["echarts","layoutUtil","wordCloudLayoutHelper","isSupported","Error","updateCanvasMask","maskCanvas","ctx","getContext","imageData","getImageData","width","height","newImageData","createImageData","toneSum","toneCnt","i","data","length","alpha","tone","threshold","putImageData","registerLayout","ecModel","api","eachSeriesByType","seriesModel","gridRect","getLayoutRect","getBoxLayoutParams","getWidth","getHeight","getData","canvas","document","createElement","maskImage","get","drawImage","e","console","error","toString","sizeRange","rotationRange","valueExtent","getDataExtent","DEGREE_TO_RAD","Math","PI","gridSize","onWordCloudDrawn","item","detail","drawn","layoutInstance","ondraw","gx","x","gy","y","list","mapArray","value","idx","itemModel","getItemModel","getName","number","linearMap","sort","a","b","fontFamily","fontWeight","ellipticity","minRotation","maxRotation","clearCanvas","rotateRatio","rotationStep","drawOutOfBound","shuffle","shape","addEventListener","dispose","removeEventListener","preventDefault","registerPreprocessor","option","series","util","isArray","compats","compatTextStyle","textStyle","each","key","hasOwnProperty","format","capitalFirst","seriesItem","type","normal","emphasis","completeDimensions","extendSeriesModel","visualColorAccessPath","optionUpdated","this","max","floor","getInitialData","dimensions","List","initData","defaultOption","left","top","window","setImmediate","msSetImmediate","webkitSetImmediate","mozSetImmediate","oSetImmediate","postMessage","callbacks","undefined","message","setZeroTimeout","callback","id","push","evt","substr","stopImmediatePropagation","parseInt","clearImmediate","fn","setTimeout","msClearImmediate","webkitClearImmediate","mozClearImmediate","oClearImmediate","timer","clearTimeout","global","fillText","Array","prototype","some","minFontSize","hanWidth","mWidth","size","font","measureText","shuffleArray","arr","j","random","WordCloud","elements","options","forEach","el","getElementById","tagName","appendChild","settings","color","minSize","weightFactor","backgroundColor","origin","drawMask","maskColor","maskGapWidth","wait","abortThreshold","abort","classes","hover","click","factor","pt","theta","sin","thetaPrime","cos","sqrt","grid","ngx","ngy","center","maxRadius","escapeTime","getTextColor","g","maskRectWidth","abs","min","random_hsl_color","getTextClasses","hovered","interactive","infoGrid","getInfoGridFromMouseTouchEvent","clientX","clientY","currentTarget","rect","getBoundingClientRect","touches","eventX","eventY","wordcloudhover","info","dimension","wordcloudclick","pointsAtRadius","getPointsAtRadius","radius","T","t","points","rx","exceedTime","Date","getTime","getRotateDeg","round","getTextInfo","word","weight","rotateDeg","debug","fontSize","mu","fcanvas","fctx","willReadFrequently","fw","fh","boxWidth","boxHeight","fgw","ceil","fgh","fillTextOffsetX","fillTextOffsetY","cgh","cgw","setAttribute","body","save","scale","translate","rotate","fillStyle","textBaseline","strokeRect","restore","occupied","bounds","singleGridLoop","fillRect","gw","gh","fillTextWidth","fillTextHeight","canFitText","px","py","drawText","distance","attributes","span","transformRule","styleRules","cssProp","textContent","style","attribute","className","fillGridAt","updateGrid","w","h","putWord","r","tryToPutWordAtPoint","gxy","rot","concat","res","sendEvent","cancelable","createEvent","initCustomEvent","dispatchEvent","start","loopingFunction","stoppingFunction","clearRect","position","bctx","bgPixel","webkitTapHighlightColor","stopInteraction","listener","anotherWordCloudStart","loop","canceled","toFixed","root","factory","exports","log","msg","colorPalette","theme","title","visualMap","itemWidth","toolbox","iconStyle","borderColor","tooltip","axisPointer","lineStyle","crossStyle","shadowStyle","dataZoom","dataBackgroundColor","fillerColor","handleColor","categoryAxis","axisLine","splitLine","valueAxis","splitArea","show","areaStyle","timeline","controlStyle","symbol","symbolSize","line","smooth","candlestick","itemStyle","color0","scatter","map","label","graph","linkStyle","gauge","axisTick","splitNumber","pointer","registerTheme","module","require","name","word_cloud_view","word_cloud_options","word_list","methods","draw_word_cloud_view","$echarts","init","showLoading","setOption","hideLoading","init_view_data","word_cloud_series","right","bottom","autoSize","enable","textPadding","join","shadowBlur","shadowColor","mounted","render","attrs","extendChartView","group","removeAll","text","dataIdx","textStyleModel","getModel","emphasisTextStyleModel","textEl","graphic","Text","setTextStyle","textFill","getItemVisual","rotation","add","setItemGraphicEl","setHoverStyle","forMerge","_model","remove"],"mappings":"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","file":"js/chunk-61dea836.50cc3ecf.js","sourcesContent":["var echarts = require('echarts/lib/echarts');\nvar layoutUtil = require('echarts/lib/util/layout');\n\nrequire('./WordCloudSeries');\nrequire('./WordCloudView');\n\nvar wordCloudLayoutHelper = require('./layout');\n\nif (!wordCloudLayoutHelper.isSupported) {\n    throw new Error('Sorry your browser not support wordCloud');\n}\n\n// https://github.com/timdream/wordcloud2.js/blob/c236bee60436e048949f9becc4f0f67bd832dc5c/index.js#L233\nfunction updateCanvasMask(maskCanvas) {\n    var ctx = maskCanvas.getContext('2d');\n    var imageData = ctx.getImageData(\n        0, 0, maskCanvas.width, maskCanvas.height);\n    var newImageData = ctx.createImageData(imageData);\n\n    var toneSum = 0;\n    var toneCnt = 0;\n    for (var i = 0; i < imageData.data.length; i += 4) {\n        var alpha = imageData.data[i + 3];\n        if (alpha > 128) {\n            var tone = imageData.data[i]\n                + imageData.data[i + 1]\n                + imageData.data[i + 2];\n            toneSum += tone;\n            ++toneCnt;\n        }\n    }\n    var threshold = toneSum / toneCnt;\n\n    for (var i = 0; i < imageData.data.length; i += 4) {\n        var tone = imageData.data[i]\n            + imageData.data[i + 1]\n            + imageData.data[i + 2];\n        var alpha = imageData.data[i + 3];\n\n        if (alpha < 128 || tone > threshold) {\n            // Area not to draw\n            newImageData.data[i] = 0;\n            newImageData.data[i + 1] = 0;\n            newImageData.data[i + 2] = 0;\n            newImageData.data[i + 3] = 0;\n        }\n        else {\n            // Area to draw\n            // The color must be same with backgroundColor\n            newImageData.data[i] = 255;\n            newImageData.data[i + 1] = 255;\n            newImageData.data[i + 2] = 255;\n            newImageData.data[i + 3] = 255;\n        }\n    }\n\n    ctx.putImageData(newImageData, 0, 0);\n}\n\necharts.registerLayout(function (ecModel, api) {\n    ecModel.eachSeriesByType('wordCloud', function (seriesModel) {\n        var gridRect = layoutUtil.getLayoutRect(\n            seriesModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }\n        );\n        var data = seriesModel.getData();\n\n        var canvas = document.createElement('canvas');\n        canvas.width = gridRect.width;\n        canvas.height = gridRect.height;\n\n        var ctx = canvas.getContext('2d');\n        var maskImage = seriesModel.get('maskImage');\n        if (maskImage) {\n            try {\n                ctx.drawImage(maskImage, 0, 0, canvas.width, canvas.height);\n                updateCanvasMask(canvas);\n            }\n            catch (e) {\n                console.error('Invalid mask image');\n                console.error(e.toString());\n            }\n        }\n\n        var sizeRange = seriesModel.get('sizeRange');\n        var rotationRange = seriesModel.get('rotationRange');\n        var valueExtent = data.getDataExtent('value');\n\n        var DEGREE_TO_RAD = Math.PI / 180;\n        var gridSize = seriesModel.get('gridSize');\n        wordCloudLayoutHelper(canvas, {\n            list: data.mapArray('value', function (value, idx) {\n                var itemModel = data.getItemModel(idx);\n                return [\n                    data.getName(idx),\n                    itemModel.get('textStyle.normal.textSize', true)\n                        || echarts.number.linearMap(value, valueExtent, sizeRange),\n                    idx\n                ];\n            }).sort(function (a, b) {\n                // Sort from large to small in case there is no more room for more words\n                return b[1] - a[1];\n            }),\n            fontFamily: seriesModel.get('textStyle.normal.fontFamily')\n                || seriesModel.get('textStyle.emphasis.fontFamily')\n                || ecModel.get('textStyle.fontFamily'),\n            fontWeight: seriesModel.get('textStyle.normal.fontWeight')\n                || seriesModel.get('textStyle.emphasis.fontWeight')\n                || ecModel.get('textStyle.fontWeight'),\n            gridSize: gridSize,\n\n            ellipticity: gridRect.height / gridRect.width,\n\n            minRotation: rotationRange[0] * DEGREE_TO_RAD,\n            maxRotation: rotationRange[1] * DEGREE_TO_RAD,\n\n            clearCanvas: !maskImage,\n\n            rotateRatio: 1,\n\n            rotationStep: seriesModel.get('rotationStep') * DEGREE_TO_RAD,\n\n            drawOutOfBound: seriesModel.get('drawOutOfBound'),\n\n            shuffle: false,\n\n            shape: seriesModel.get('shape')\n        });\n\n        function onWordCloudDrawn(e) {\n            var item = e.detail.item;\n            if (e.detail.drawn && seriesModel.layoutInstance.ondraw) {\n                e.detail.drawn.gx += gridRect.x / gridSize;\n                e.detail.drawn.gy += gridRect.y / gridSize;\n                seriesModel.layoutInstance.ondraw(\n                    item[0], item[1], item[2], e.detail.drawn\n                );\n            }\n        }\n\n        canvas.addEventListener('wordclouddrawn', onWordCloudDrawn);\n\n        if (seriesModel.layoutInstance) {\n            // Dispose previous\n            seriesModel.layoutInstance.dispose();\n        }\n\n        seriesModel.layoutInstance = {\n            ondraw: null,\n\n            dispose: function () {\n                canvas.removeEventListener('wordclouddrawn', onWordCloudDrawn);\n                // Abort\n                canvas.addEventListener('wordclouddrawn', function (e) {\n                    // Prevent default to cancle the event and stop the loop\n                    e.preventDefault();\n                });\n            }\n        };\n    });\n});\n\necharts.registerPreprocessor(function (option) {\n    var series = (option || {}).series;\n    !echarts.util.isArray(series) && (series = series ? [series] : []);\n\n    var compats = ['shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n\n    echarts.util.each(series, function (seriesItem) {\n        if (seriesItem && seriesItem.type === 'wordCloud') {\n            var textStyle = seriesItem.textStyle || {};\n\n            compatTextStyle(textStyle.normal);\n            compatTextStyle(textStyle.emphasis);\n        }\n    });\n\n    function compatTextStyle(textStyle) {\n        textStyle && echarts.util.each(compats, function (key) {\n            if (textStyle.hasOwnProperty(key)) {\n                textStyle['text' + echarts.format.capitalFirst(key)] = textStyle[key];\n            }\n        });\n    }\n});\n","var completeDimensions = require('echarts/lib/data/helper/completeDimensions');\nvar echarts = require('echarts/lib/echarts');\n\necharts.extendSeriesModel({\n\n    type: 'series.wordCloud',\n\n    visualColorAccessPath: 'textStyle.normal.color',\n\n    optionUpdated: function () {\n        var option = this.option;\n        option.gridSize = Math.max(Math.floor(option.gridSize), 4);\n    },\n\n    getInitialData: function (option, ecModel) {\n        var dimensions = completeDimensions(['value'], option.data);\n        var list = new echarts.List(dimensions, this);\n        list.initData(option.data);\n        return list;\n    },\n\n    // Most of options are from https://github.com/timdream/wordcloud2.js/blob/gh-pages/API.md\n    defaultOption: {\n\n        maskImage: null,\n\n        // Shape can be 'circle', 'cardioid', 'diamond', 'triangle-forward', 'triangle', 'pentagon', 'star'\n        shape: 'circle',\n\n        left: 'center',\n\n        top: 'center',\n\n        width: '70%',\n\n        height: '80%',\n\n        sizeRange: [12, 60],\n\n        rotationRange: [-90, 90],\n\n        rotationStep: 45,\n\n        gridSize: 8,\n\n        drawOutOfBound: false,\n\n        textStyle: {\n            normal: {\n                fontWeight: 'normal'\n            }\n        }\n    }\n});\n","/*!\n * wordcloud2.js\n * http://timdream.org/wordcloud2.js/\n *\n * Copyright 2011 - 2013 Tim Chien\n * Released under the MIT license\n */\n\n'use strict';\n\n// setImmediate\nif (!window.setImmediate) {\n  window.setImmediate = (function setupSetImmediate() {\n    return window.msSetImmediate ||\n    window.webkitSetImmediate ||\n    window.mozSetImmediate ||\n    window.oSetImmediate ||\n    (function setupSetZeroTimeout() {\n      if (!window.postMessage || !window.addEventListener) {\n        return null;\n      }\n\n      var callbacks = [undefined];\n      var message = 'zero-timeout-message';\n\n      // Like setTimeout, but only takes a function argument.  There's\n      // no time argument (always zero) and no arguments (you have to\n      // use a closure).\n      var setZeroTimeout = function setZeroTimeout(callback) {\n        var id = callbacks.length;\n        callbacks.push(callback);\n        window.postMessage(message + id.toString(36), '*');\n\n        return id;\n      };\n\n      window.addEventListener('message', function setZeroTimeoutMessage(evt) {\n        // Skipping checking event source, retarded IE confused this window\n        // object with another in the presence of iframe\n        if (typeof evt.data !== 'string' ||\n            evt.data.substr(0, message.length) !== message/* ||\n            evt.source !== window */) {\n          return;\n        }\n\n        evt.stopImmediatePropagation();\n\n        var id = parseInt(evt.data.substr(message.length), 36);\n        if (!callbacks[id]) {\n          return;\n        }\n\n        callbacks[id]();\n        callbacks[id] = undefined;\n      }, true);\n\n      /* specify clearImmediate() here since we need the scope */\n      window.clearImmediate = function clearZeroTimeout(id) {\n        if (!callbacks[id]) {\n          return;\n        }\n\n        callbacks[id] = undefined;\n      };\n\n      return setZeroTimeout;\n    })() ||\n    // fallback\n    function setImmediateFallback(fn) {\n      window.setTimeout(fn, 0);\n    };\n  })();\n}\n\nif (!window.clearImmediate) {\n  window.clearImmediate = (function setupClearImmediate() {\n    return window.msClearImmediate ||\n    window.webkitClearImmediate ||\n    window.mozClearImmediate ||\n    window.oClearImmediate ||\n    // \"clearZeroTimeout\" is implement on the previous block ||\n    // fallback\n    function clearImmediateFallback(timer) {\n      window.clearTimeout(timer);\n    };\n  })();\n}\n\n(function(global) {\n\n  // Check if WordCloud can run on this browser\n  var isSupported = (function isSupported() {\n    var canvas = document.createElement('canvas');\n    if (!canvas || !canvas.getContext) {\n      return false;\n    }\n\n    var ctx = canvas.getContext('2d');\n    if (!ctx.getImageData) {\n      return false;\n    }\n    if (!ctx.fillText) {\n      return false;\n    }\n\n    if (!Array.prototype.some) {\n      return false;\n    }\n    if (!Array.prototype.push) {\n      return false;\n    }\n\n    return true;\n  }());\n\n  // Find out if the browser impose minium font size by\n  // drawing small texts on a canvas and measure it's width.\n  var minFontSize = (function getMinFontSize() {\n    if (!isSupported) {\n      return;\n    }\n\n    var ctx = document.createElement('canvas').getContext('2d');\n\n    // start from 20\n    var size = 20;\n\n    // two sizes to measure\n    var hanWidth, mWidth;\n\n    while (size) {\n      ctx.font = size.toString(10) + 'px sans-serif';\n      if ((ctx.measureText('\\uFF37').width === hanWidth) &&\n          (ctx.measureText('m').width) === mWidth) {\n        return (size + 1);\n      }\n\n      hanWidth = ctx.measureText('\\uFF37').width;\n      mWidth = ctx.measureText('m').width;\n\n      size--;\n    }\n\n    return 0;\n  })();\n\n  // Based on http://jsfromhell.com/array/shuffle\n  var shuffleArray = function shuffleArray(arr) {\n    for (var j, x, i = arr.length; i;\n      j = Math.floor(Math.random() * i),\n      x = arr[--i], arr[i] = arr[j],\n      arr[j] = x) {}\n    return arr;\n  };\n\n  var WordCloud = function WordCloud(elements, options) {\n    if (!isSupported) {\n      return;\n    }\n\n    if (!Array.isArray(elements)) {\n      elements = [elements];\n    }\n\n    elements.forEach(function(el, i) {\n      if (typeof el === 'string') {\n        elements[i] = document.getElementById(el);\n        if (!elements[i]) {\n          throw 'The element id specified is not found.';\n        }\n      } else if (!el.tagName && !el.appendChild) {\n        throw 'You must pass valid HTML elements, or ID of the element.';\n      }\n    });\n\n    /* Default values to be overwritten by options object */\n    var settings = {\n      list: [],\n      fontFamily: '\"Trebuchet MS\", \"Heiti TC\", \"微軟正黑體\", ' +\n                  '\"Arial Unicode MS\", \"Droid Fallback Sans\", sans-serif',\n      fontWeight: 'normal',\n      color: 'random-dark',\n      minSize: 0, // 0 to disable\n      weightFactor: 1,\n      clearCanvas: true,\n      backgroundColor: '#fff',  // opaque white = rgba(255, 255, 255, 1)\n\n      gridSize: 8,\n      drawOutOfBound: false,\n      origin: null,\n\n      drawMask: false,\n      maskColor: 'rgba(255,0,0,0.3)',\n      maskGapWidth: 0.3,\n\n      wait: 0,\n      abortThreshold: 0, // disabled\n      abort: function noop() {},\n\n      minRotation: - Math.PI / 2,\n      maxRotation: Math.PI / 2,\n      rotationStep: 0.1,\n\n      shuffle: true,\n      rotateRatio: 0.1,\n\n      shape: 'circle',\n      ellipticity: 0.65,\n\n      classes: null,\n\n      hover: null,\n      click: null\n    };\n\n    if (options) {\n      for (var key in options) {\n        if (key in settings) {\n          settings[key] = options[key];\n        }\n      }\n    }\n\n    /* Convert weightFactor into a function */\n    if (typeof settings.weightFactor !== 'function') {\n      var factor = settings.weightFactor;\n      settings.weightFactor = function weightFactor(pt) {\n        return pt * factor; //in px\n      };\n    }\n\n    /* Convert shape into a function */\n    if (typeof settings.shape !== 'function') {\n      switch (settings.shape) {\n        case 'circle':\n        /* falls through */\n        default:\n          // 'circle' is the default and a shortcut in the code loop.\n          settings.shape = 'circle';\n          break;\n\n        case 'cardioid':\n          settings.shape = function shapeCardioid(theta) {\n            return 1 - Math.sin(theta);\n          };\n          break;\n\n        /*\n        To work out an X-gon, one has to calculate \"m\",\n        where 1/(cos(2*PI/X)+m*sin(2*PI/X)) = 1/(cos(0)+m*sin(0))\n        http://www.wolframalpha.com/input/?i=1%2F%28cos%282*PI%2FX%29%2Bm*sin%28\n        2*PI%2FX%29%29+%3D+1%2F%28cos%280%29%2Bm*sin%280%29%29\n        Copy the solution into polar equation r = 1/(cos(t') + m*sin(t'))\n        where t' equals to mod(t, 2PI/X);\n        */\n\n        case 'diamond':\n        case 'square':\n          // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n          // %28t%2C+PI%2F2%29%29%2Bsin%28mod+%28t%2C+PI%2F2%29%29%29%2C+t+%3D\n          // +0+..+2*PI\n          settings.shape = function shapeSquare(theta) {\n            var thetaPrime = theta % (2 * Math.PI / 4);\n            return 1 / (Math.cos(thetaPrime) + Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'triangle-forward':\n          // http://www.wolframalpha.com/input/?i=plot+r+%3D+1%2F%28cos%28mod+\n          // %28t%2C+2*PI%2F3%29%29%2Bsqrt%283%29sin%28mod+%28t%2C+2*PI%2F3%29\n          // %29%29%2C+t+%3D+0+..+2*PI\n          settings.shape = function shapeTriangle(theta) {\n            var thetaPrime = theta % (2 * Math.PI / 3);\n            return 1 / (Math.cos(thetaPrime) +\n                        Math.sqrt(3) * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'triangle':\n        case 'triangle-upright':\n          settings.shape = function shapeTriangle(theta) {\n            var thetaPrime = (theta + Math.PI * 3 / 2) % (2 * Math.PI / 3);\n            return 1 / (Math.cos(thetaPrime) +\n                        Math.sqrt(3) * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'pentagon':\n          settings.shape = function shapePentagon(theta) {\n            var thetaPrime = (theta + 0.955) % (2 * Math.PI / 5);\n            return 1 / (Math.cos(thetaPrime) +\n                        0.726543 * Math.sin(thetaPrime));\n          };\n          break;\n\n        case 'star':\n          settings.shape = function shapeStar(theta) {\n            var thetaPrime = (theta + 0.955) % (2 * Math.PI / 10);\n            if ((theta + 0.955) % (2 * Math.PI / 5) - (2 * Math.PI / 10) >= 0) {\n              return 1 / (Math.cos((2 * Math.PI / 10) - thetaPrime) +\n                          3.07768 * Math.sin((2 * Math.PI / 10) - thetaPrime));\n            } else {\n              return 1 / (Math.cos(thetaPrime) +\n                          3.07768 * Math.sin(thetaPrime));\n            }\n          };\n          break;\n      }\n    }\n\n    /* Make sure gridSize is a whole number and is not smaller than 4px */\n    settings.gridSize = Math.max(Math.floor(settings.gridSize), 4);\n\n    /* shorthand */\n    var g = settings.gridSize;\n    var maskRectWidth = g - settings.maskGapWidth;\n\n    /* normalize rotation settings */\n    var rotationRange = Math.abs(settings.maxRotation - settings.minRotation);\n    var minRotation = Math.min(settings.maxRotation, settings.minRotation);\n    var rotationStep = settings.rotationStep;\n\n    /* information/object available to all functions, set when start() */\n    var grid, // 2d array containing filling information\n      ngx, ngy, // width and height of the grid\n      center, // position of the center of the cloud\n      maxRadius;\n\n    /* timestamp for measuring each putWord() action */\n    var escapeTime;\n\n    /* function for getting the color of the text */\n    var getTextColor;\n    function random_hsl_color(min, max) {\n      return 'hsl(' +\n        (Math.random() * 360).toFixed() + ',' +\n        (Math.random() * 30 + 70).toFixed() + '%,' +\n        (Math.random() * (max - min) + min).toFixed() + '%)';\n    }\n    switch (settings.color) {\n      case 'random-dark':\n        getTextColor = function getRandomDarkColor() {\n          return random_hsl_color(10, 50);\n        };\n        break;\n\n      case 'random-light':\n        getTextColor = function getRandomLightColor() {\n          return random_hsl_color(50, 90);\n        };\n        break;\n\n      default:\n        if (typeof settings.color === 'function') {\n          getTextColor = settings.color;\n        }\n        break;\n    }\n\n    /* function for getting the classes of the text */\n    var getTextClasses = null;\n    if (typeof settings.classes === 'function') {\n      getTextClasses = settings.classes;\n    }\n\n    /* Interactive */\n    var interactive = false;\n    var infoGrid = [];\n    var hovered;\n\n    var getInfoGridFromMouseTouchEvent =\n    function getInfoGridFromMouseTouchEvent(evt) {\n      var canvas = evt.currentTarget;\n      var rect = canvas.getBoundingClientRect();\n      var clientX;\n      var clientY;\n      /** Detect if touches are available */\n      if (evt.touches) {\n        clientX = evt.touches[0].clientX;\n        clientY = evt.touches[0].clientY;\n      } else {\n        clientX = evt.clientX;\n        clientY = evt.clientY;\n      }\n      var eventX = clientX - rect.left;\n      var eventY = clientY - rect.top;\n\n      var x = Math.floor(eventX * ((canvas.width / rect.width) || 1) / g);\n      var y = Math.floor(eventY * ((canvas.height / rect.height) || 1) / g);\n\n      return infoGrid[x][y];\n    };\n\n    var wordcloudhover = function wordcloudhover(evt) {\n      var info = getInfoGridFromMouseTouchEvent(evt);\n\n      if (hovered === info) {\n        return;\n      }\n\n      hovered = info;\n      if (!info) {\n        settings.hover(undefined, undefined, evt);\n\n        return;\n      }\n\n      settings.hover(info.item, info.dimension, evt);\n\n    };\n\n    var wordcloudclick = function wordcloudclick(evt) {\n      var info = getInfoGridFromMouseTouchEvent(evt);\n      if (!info) {\n        return;\n      }\n\n      settings.click(info.item, info.dimension, evt);\n      evt.preventDefault();\n    };\n\n    /* Get points on the grid for a given radius away from the center */\n    var pointsAtRadius = [];\n    var getPointsAtRadius = function getPointsAtRadius(radius) {\n      if (pointsAtRadius[radius]) {\n        return pointsAtRadius[radius];\n      }\n\n      // Look for these number of points on each radius\n      var T = radius * 8;\n\n      // Getting all the points at this radius\n      var t = T;\n      var points = [];\n\n      if (radius === 0) {\n        points.push([center[0], center[1], 0]);\n      }\n\n      while (t--) {\n        // distort the radius to put the cloud in shape\n        var rx = 1;\n        if (settings.shape !== 'circle') {\n          rx = settings.shape(t / T * 2 * Math.PI); // 0 to 1\n        }\n\n        // Push [x, y, t]; t is used solely for getTextColor()\n        points.push([\n          center[0] + radius * rx * Math.cos(-t / T * 2 * Math.PI),\n          center[1] + radius * rx * Math.sin(-t / T * 2 * Math.PI) *\n            settings.ellipticity,\n          t / T * 2 * Math.PI]);\n      }\n\n      pointsAtRadius[radius] = points;\n      return points;\n    };\n\n    /* Return true if we had spent too much time */\n    var exceedTime = function exceedTime() {\n      return ((settings.abortThreshold > 0) &&\n        ((new Date()).getTime() - escapeTime > settings.abortThreshold));\n    };\n\n    /* Get the deg of rotation according to settings, and luck. */\n    var getRotateDeg = function getRotateDeg() {\n      if (settings.rotateRatio === 0) {\n        return 0;\n      }\n\n      if (Math.random() > settings.rotateRatio) {\n        return 0;\n      }\n\n      if (rotationRange === 0) {\n        return minRotation;\n      }\n\n      return minRotation + Math.round(Math.random() * rotationRange / rotationStep) * rotationStep;\n    };\n\n    var getTextInfo = function getTextInfo(word, weight, rotateDeg) {\n      // calculate the acutal font size\n      // fontSize === 0 means weightFactor function wants the text skipped,\n      // and size < minSize means we cannot draw the text.\n      var debug = false;\n      var fontSize = settings.weightFactor(weight);\n      if (fontSize <= settings.minSize) {\n        return false;\n      }\n\n      // Scale factor here is to make sure fillText is not limited by\n      // the minium font size set by browser.\n      // It will always be 1 or 2n.\n      var mu = 1;\n      if (fontSize < minFontSize) {\n        mu = (function calculateScaleFactor() {\n          var mu = 2;\n          while (mu * fontSize < minFontSize) {\n            mu += 2;\n          }\n          return mu;\n        })();\n      }\n\n      var fcanvas = document.createElement('canvas');\n      var fctx = fcanvas.getContext('2d', { willReadFrequently: true });\n\n      fctx.font = settings.fontWeight + ' ' +\n        (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n\n      // Estimate the dimension of the text with measureText().\n      var fw = fctx.measureText(word).width / mu;\n      var fh = Math.max(fontSize * mu,\n                        fctx.measureText('m').width,\n                        fctx.measureText('\\uFF37').width) / mu;\n\n      // Create a boundary box that is larger than our estimates,\n      // so text don't get cut of (it sill might)\n      var boxWidth = fw + fh * 2;\n      var boxHeight = fh * 3;\n      var fgw = Math.ceil(boxWidth / g);\n      var fgh = Math.ceil(boxHeight / g);\n      boxWidth = fgw * g;\n      boxHeight = fgh * g;\n\n      // Calculate the proper offsets to make the text centered at\n      // the preferred position.\n\n      // This is simply half of the width.\n      var fillTextOffsetX = - fw / 2;\n      // Instead of moving the box to the exact middle of the preferred\n      // position, for Y-offset we move 0.4 instead, so Latin alphabets look\n      // vertical centered.\n      var fillTextOffsetY = - fh * 0.4;\n\n      // Calculate the actual dimension of the canvas, considering the rotation.\n      var cgh = Math.ceil((boxWidth * Math.abs(Math.sin(rotateDeg)) +\n                           boxHeight * Math.abs(Math.cos(rotateDeg))) / g);\n      var cgw = Math.ceil((boxWidth * Math.abs(Math.cos(rotateDeg)) +\n                           boxHeight * Math.abs(Math.sin(rotateDeg))) / g);\n      var width = cgw * g;\n      var height = cgh * g;\n\n      fcanvas.setAttribute('width', width);\n      fcanvas.setAttribute('height', height);\n\n      if (debug) {\n        // Attach fcanvas to the DOM\n        document.body.appendChild(fcanvas);\n        // Save it's state so that we could restore and draw the grid correctly.\n        fctx.save();\n      }\n\n      // Scale the canvas with |mu|.\n      fctx.scale(1 / mu, 1 / mu);\n      fctx.translate(width * mu / 2, height * mu / 2);\n      fctx.rotate(- rotateDeg);\n\n      // Once the width/height is set, ctx info will be reset.\n      // Set it again here.\n      fctx.font = settings.fontWeight + ' ' +\n        (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n\n      // Fill the text into the fcanvas.\n      // XXX: We cannot because textBaseline = 'top' here because\n      // Firefox and Chrome uses different default line-height for canvas.\n      // Please read https://bugzil.la/737852#c6.\n      // Here, we use textBaseline = 'middle' and draw the text at exactly\n      // 0.5 * fontSize lower.\n      fctx.fillStyle = '#000';\n      fctx.textBaseline = 'middle';\n      fctx.fillText(word, fillTextOffsetX * mu,\n                    (fillTextOffsetY + fontSize * 0.5) * mu);\n\n      // Get the pixels of the text\n      var imageData = fctx.getImageData(0, 0, width, height).data;\n\n      if (exceedTime()) {\n        return false;\n      }\n\n      if (debug) {\n        // Draw the box of the original estimation\n        fctx.strokeRect(fillTextOffsetX * mu,\n                        fillTextOffsetY, fw * mu, fh * mu);\n        fctx.restore();\n      }\n\n      // Read the pixels and save the information to the occupied array\n      var occupied = [];\n      var gx = cgw, gy, x, y;\n      var bounds = [cgh / 2, cgw / 2, cgh / 2, cgw / 2];\n      while (gx--) {\n        gy = cgh;\n        while (gy--) {\n          y = g;\n          singleGridLoop: {\n            while (y--) {\n              x = g;\n              while (x--) {\n                if (imageData[((gy * g + y) * width +\n                               (gx * g + x)) * 4 + 3]) {\n                  occupied.push([gx, gy]);\n\n                  if (gx < bounds[3]) {\n                    bounds[3] = gx;\n                  }\n                  if (gx > bounds[1]) {\n                    bounds[1] = gx;\n                  }\n                  if (gy < bounds[0]) {\n                    bounds[0] = gy;\n                  }\n                  if (gy > bounds[2]) {\n                    bounds[2] = gy;\n                  }\n\n                  if (debug) {\n                    fctx.fillStyle = 'rgba(255, 0, 0, 0.5)';\n                    fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\n                  }\n                  break singleGridLoop;\n                }\n              }\n            }\n            if (debug) {\n              fctx.fillStyle = 'rgba(0, 0, 255, 0.5)';\n              fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);\n            }\n          }\n        }\n      }\n\n      if (debug) {\n        fctx.fillStyle = 'rgba(0, 255, 0, 0.5)';\n        fctx.fillRect(bounds[3] * g,\n                      bounds[0] * g,\n                      (bounds[1] - bounds[3] + 1) * g,\n                      (bounds[2] - bounds[0] + 1) * g);\n      }\n\n      // Return information needed to create the text on the real canvas\n      return {\n        mu: mu,\n        occupied: occupied,\n        bounds: bounds,\n        gw: cgw,\n        gh: cgh,\n        fillTextOffsetX: fillTextOffsetX,\n        fillTextOffsetY: fillTextOffsetY,\n        fillTextWidth: fw,\n        fillTextHeight: fh,\n        fontSize: fontSize\n      };\n    };\n\n    /* Determine if there is room available in the given dimension */\n    var canFitText = function canFitText(gx, gy, gw, gh, occupied) {\n      // Go through the occupied points,\n      // return false if the space is not available.\n      var i = occupied.length;\n      while (i--) {\n        var px = gx + occupied[i][0];\n        var py = gy + occupied[i][1];\n\n        if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n          if (!settings.drawOutOfBound) {\n            return false;\n          }\n          continue;\n        }\n\n        if (!grid[px][py]) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    /* Actually draw the text on the grid */\n    var drawText = function drawText(gx, gy, info, word, weight,\n                                     distance, theta, rotateDeg, attributes) {\n\n      var fontSize = info.fontSize;\n      var color;\n      if (getTextColor) {\n        color = getTextColor(word, weight, fontSize, distance, theta);\n      } else {\n        color = settings.color;\n      }\n\n      var classes;\n      if (getTextClasses) {\n        classes = getTextClasses(word, weight, fontSize, distance, theta);\n      } else {\n        classes = settings.classes;\n      }\n\n      var dimension;\n      var bounds = info.bounds;\n      dimension = {\n        x: (gx + bounds[3]) * g,\n        y: (gy + bounds[0]) * g,\n        w: (bounds[1] - bounds[3] + 1) * g,\n        h: (bounds[2] - bounds[0] + 1) * g\n      };\n\n      elements.forEach(function(el) {\n        if (el.getContext) {\n          var ctx = el.getContext('2d');\n          var mu = info.mu;\n\n          // Save the current state before messing it\n          ctx.save();\n          ctx.scale(1 / mu, 1 / mu);\n\n          ctx.font = settings.fontWeight + ' ' +\n                     (fontSize * mu).toString(10) + 'px ' + settings.fontFamily;\n          ctx.fillStyle = color;\n\n          // Translate the canvas position to the origin coordinate of where\n          // the text should be put.\n          ctx.translate((gx + info.gw / 2) * g * mu,\n                        (gy + info.gh / 2) * g * mu);\n\n          if (rotateDeg !== 0) {\n            ctx.rotate(- rotateDeg);\n          }\n\n          // Finally, fill the text.\n\n          // XXX: We cannot because textBaseline = 'top' here because\n          // Firefox and Chrome uses different default line-height for canvas.\n          // Please read https://bugzil.la/737852#c6.\n          // Here, we use textBaseline = 'middle' and draw the text at exactly\n          // 0.5 * fontSize lower.\n          ctx.textBaseline = 'middle';\n          ctx.fillText(word, info.fillTextOffsetX * mu,\n                             (info.fillTextOffsetY + fontSize * 0.5) * mu);\n\n          // The below box is always matches how <span>s are positioned\n          /* ctx.strokeRect(info.fillTextOffsetX, info.fillTextOffsetY,\n            info.fillTextWidth, info.fillTextHeight); */\n\n          // Restore the state.\n          ctx.restore();\n        } else {\n          // drawText on DIV element\n          var span = document.createElement('span');\n          var transformRule = '';\n          transformRule = 'rotate(' + (- rotateDeg / Math.PI * 180) + 'deg) ';\n          if (info.mu !== 1) {\n            transformRule +=\n              'translateX(-' + (info.fillTextWidth / 4) + 'px) ' +\n              'scale(' + (1 / info.mu) + ')';\n          }\n          var styleRules = {\n            'position': 'absolute',\n            'display': 'block',\n            'font': settings.fontWeight + ' ' +\n                    (fontSize * info.mu) + 'px ' + settings.fontFamily,\n            'left': ((gx + info.gw / 2) * g + info.fillTextOffsetX) + 'px',\n            'top': ((gy + info.gh / 2) * g + info.fillTextOffsetY) + 'px',\n            'width': info.fillTextWidth + 'px',\n            'height': info.fillTextHeight + 'px',\n            'lineHeight': fontSize + 'px',\n            'whiteSpace': 'nowrap',\n            'transform': transformRule,\n            'webkitTransform': transformRule,\n            'msTransform': transformRule,\n            'transformOrigin': '50% 40%',\n            'webkitTransformOrigin': '50% 40%',\n            'msTransformOrigin': '50% 40%'\n          };\n          if (color) {\n            styleRules.color = color;\n          }\n          span.textContent = word;\n          for (var cssProp in styleRules) {\n            span.style[cssProp] = styleRules[cssProp];\n          }\n          if (attributes) {\n            for (var attribute in attributes) {\n              span.setAttribute(attribute, attributes[attribute]);\n            }\n          }\n          if (classes) {\n            span.className += classes;\n          }\n          el.appendChild(span);\n        }\n      });\n    };\n\n    /* Help function to updateGrid */\n    var fillGridAt = function fillGridAt(x, y, drawMask, dimension, item) {\n      if (x >= ngx || y >= ngy || x < 0 || y < 0) {\n        return;\n      }\n\n      grid[x][y] = false;\n\n      if (drawMask) {\n        var ctx = elements[0].getContext('2d');\n        ctx.fillRect(x * g, y * g, maskRectWidth, maskRectWidth);\n      }\n\n      if (interactive) {\n        infoGrid[x][y] = { item: item, dimension: dimension };\n      }\n    };\n\n    /* Update the filling information of the given space with occupied points.\n       Draw the mask on the canvas if necessary. */\n    var updateGrid = function updateGrid(gx, gy, gw, gh, info, item) {\n      var occupied = info.occupied;\n      var drawMask = settings.drawMask;\n      var ctx;\n      if (drawMask) {\n        ctx = elements[0].getContext('2d');\n        ctx.save();\n        ctx.fillStyle = settings.maskColor;\n      }\n\n      var dimension;\n      if (interactive) {\n        var bounds = info.bounds;\n        dimension = {\n          x: (gx + bounds[3]) * g,\n          y: (gy + bounds[0]) * g,\n          w: (bounds[1] - bounds[3] + 1) * g,\n          h: (bounds[2] - bounds[0] + 1) * g\n        };\n      }\n\n      var i = occupied.length;\n      while (i--) {\n        var px = gx + occupied[i][0];\n        var py = gy + occupied[i][1];\n\n        if (px >= ngx || py >= ngy || px < 0 || py < 0) {\n          continue;\n        }\n\n        fillGridAt(px, py, drawMask, dimension, item);\n      }\n\n      if (drawMask) {\n        ctx.restore();\n      }\n    };\n\n    /* putWord() processes each item on the list,\n       calculate it's size and determine it's position, and actually\n       put it on the canvas. */\n    var putWord = function putWord(item) {\n      var word, weight, attributes;\n      if (Array.isArray(item)) {\n        word = item[0];\n        weight = item[1];\n      } else {\n        word = item.word;\n        weight = item.weight;\n        attributes = item.attributes;\n      }\n      var rotateDeg = getRotateDeg();\n\n      // get info needed to put the text onto the canvas\n      var info = getTextInfo(word, weight, rotateDeg);\n\n      // not getting the info means we shouldn't be drawing this one.\n      if (!info) {\n        return false;\n      }\n\n      if (exceedTime()) {\n        return false;\n      }\n\n      // If drawOutOfBound is set to false,\n      // skip the loop if we have already know the bounding box of\n      // word is larger than the canvas.\n      if (!settings.drawOutOfBound) {\n        var bounds = info.bounds;\n        if ((bounds[1] - bounds[3] + 1) > ngx ||\n          (bounds[2] - bounds[0] + 1) > ngy) {\n          return false;\n        }\n      }\n\n      // Determine the position to put the text by\n      // start looking for the nearest points\n      var r = maxRadius + 1;\n\n      var tryToPutWordAtPoint = function(gxy) {\n        var gx = Math.floor(gxy[0] - info.gw / 2);\n        var gy = Math.floor(gxy[1] - info.gh / 2);\n        var gw = info.gw;\n        var gh = info.gh;\n\n        // If we cannot fit the text at this position, return false\n        // and go to the next position.\n        if (!canFitText(gx, gy, gw, gh, info.occupied)) {\n          return false;\n        }\n\n        // Actually put the text on the canvas\n        drawText(gx, gy, info, word, weight,\n                 (maxRadius - r), gxy[2], rotateDeg, attributes);\n\n        // Mark the spaces on the grid as filled\n        updateGrid(gx, gy, gw, gh, info, item);\n\n        return {\n          gx: gx,\n          gy: gy,\n          rot: rotateDeg,\n          info: info\n        };\n      };\n\n      while (r--) {\n        var points = getPointsAtRadius(maxRadius - r);\n\n        if (settings.shuffle) {\n          points = [].concat(points);\n          shuffleArray(points);\n        }\n\n        // Try to fit the words by looking at each point.\n        // array.some() will stop and return true\n        // when putWordAtPoint() returns true.\n        for (var i = 0; i < points.length; i++) {\n          var res = tryToPutWordAtPoint(points[i]);\n          if (res) {\n            return res;\n          }\n        }\n\n        // var drawn = points.some(tryToPutWordAtPoint);\n        // if (drawn) {\n        //   // leave putWord() and return true\n        //   return true;\n        // }\n      }\n      // we tried all distances but text won't fit, return null\n      return null;\n    };\n\n    /* Send DOM event to all elements. Will stop sending event and return\n       if the previous one is canceled (for cancelable events). */\n    var sendEvent = function sendEvent(type, cancelable, detail) {\n      if (cancelable) {\n        return !elements.some(function(el) {\n          var evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(type, true, cancelable, detail || {});\n          return !el.dispatchEvent(evt);\n        }, this);\n      } else {\n        elements.forEach(function(el) {\n          var evt = document.createEvent('CustomEvent');\n          evt.initCustomEvent(type, true, cancelable, detail || {});\n          el.dispatchEvent(evt);\n        }, this);\n      }\n    };\n\n    /* Start drawing on a canvas */\n    var start = function start() {\n      // For dimensions, clearCanvas etc.,\n      // we only care about the first element.\n      var canvas = elements[0];\n\n      if (canvas.getContext) {\n        ngx = Math.ceil(canvas.width / g);\n        ngy = Math.ceil(canvas.height / g);\n      } else {\n        var rect = canvas.getBoundingClientRect();\n        ngx = Math.ceil(rect.width / g);\n        ngy = Math.ceil(rect.height / g);\n      }\n\n      // Sending a wordcloudstart event which cause the previous loop to stop.\n      // Do nothing if the event is canceled.\n      if (!sendEvent('wordcloudstart', true)) {\n        return;\n      }\n\n      // Determine the center of the word cloud\n      center = (settings.origin) ?\n        [settings.origin[0]/g, settings.origin[1]/g] :\n        [ngx / 2, ngy / 2];\n\n      // Maxium radius to look for space\n      maxRadius = Math.floor(Math.sqrt(ngx * ngx + ngy * ngy));\n\n      /* Clear the canvas only if the clearCanvas is set,\n         if not, update the grid to the current canvas state */\n      grid = [];\n\n      var gx, gy, i;\n      if (!canvas.getContext || settings.clearCanvas) {\n        elements.forEach(function(el) {\n          if (el.getContext) {\n            var ctx = el.getContext('2d');\n            ctx.fillStyle = settings.backgroundColor;\n            ctx.clearRect(0, 0, ngx * (g + 1), ngy * (g + 1));\n            ctx.fillRect(0, 0, ngx * (g + 1), ngy * (g + 1));\n          } else {\n            el.textContent = '';\n            el.style.backgroundColor = settings.backgroundColor;\n            el.style.position = 'relative';\n          }\n        });\n\n        /* fill the grid with empty state */\n        gx = ngx;\n        while (gx--) {\n          grid[gx] = [];\n          gy = ngy;\n          while (gy--) {\n            grid[gx][gy] = true;\n          }\n        }\n      } else {\n        /* Determine bgPixel by creating\n           another canvas and fill the specified background color. */\n        var bctx = document.createElement('canvas').getContext('2d');\n\n        bctx.fillStyle = settings.backgroundColor;\n        bctx.fillRect(0, 0, 1, 1);\n        var bgPixel = bctx.getImageData(0, 0, 1, 1).data;\n\n        /* Read back the pixels of the canvas we got to tell which part of the\n           canvas is empty.\n           (no clearCanvas only works with a canvas, not divs) */\n        var imageData =\n          canvas.getContext('2d').getImageData(0, 0, ngx * g, ngy * g).data;\n\n        gx = ngx;\n        var x, y;\n        while (gx--) {\n          grid[gx] = [];\n          gy = ngy;\n          while (gy--) {\n            y = g;\n            singleGridLoop: while (y--) {\n              x = g;\n              while (x--) {\n                i = 4;\n                while (i--) {\n                  if (imageData[((gy * g + y) * ngx * g +\n                                 (gx * g + x)) * 4 + i] !== bgPixel[i]) {\n                    grid[gx][gy] = false;\n                    break singleGridLoop;\n                  }\n                }\n              }\n            }\n            if (grid[gx][gy] !== false) {\n              grid[gx][gy] = true;\n            }\n          }\n        }\n\n        imageData = bctx = bgPixel = undefined;\n      }\n\n      // fill the infoGrid with empty state if we need it\n      if (settings.hover || settings.click) {\n\n        interactive = true;\n\n        /* fill the grid with empty state */\n        gx = ngx + 1;\n        while (gx--) {\n          infoGrid[gx] = [];\n        }\n\n        if (settings.hover) {\n          canvas.addEventListener('mousemove', wordcloudhover);\n        }\n\n        if (settings.click) {\n          canvas.addEventListener('click', wordcloudclick);\n          canvas.addEventListener('touchstart', wordcloudclick);\n          canvas.addEventListener('touchend', function (e) {\n            e.preventDefault();\n          });\n          canvas.style.webkitTapHighlightColor = 'rgba(0, 0, 0, 0)';\n        }\n\n        canvas.addEventListener('wordcloudstart', function stopInteraction() {\n          canvas.removeEventListener('wordcloudstart', stopInteraction);\n\n          canvas.removeEventListener('mousemove', wordcloudhover);\n          canvas.removeEventListener('click', wordcloudclick);\n          hovered = undefined;\n        });\n      }\n\n      i = 0;\n      var loopingFunction, stoppingFunction;\n      if (settings.wait !== 0) {\n        loopingFunction = window.setTimeout;\n        stoppingFunction = window.clearTimeout;\n      } else {\n        loopingFunction = window.setImmediate;\n        stoppingFunction = window.clearImmediate;\n      }\n\n      var addEventListener = function addEventListener(type, listener) {\n        elements.forEach(function(el) {\n          el.addEventListener(type, listener);\n        }, this);\n      };\n\n      var removeEventListener = function removeEventListener(type, listener) {\n        elements.forEach(function(el) {\n          el.removeEventListener(type, listener);\n        }, this);\n      };\n\n      var anotherWordCloudStart = function anotherWordCloudStart() {\n        removeEventListener('wordcloudstart', anotherWordCloudStart);\n        stoppingFunction(timer);\n      };\n\n      addEventListener('wordcloudstart', anotherWordCloudStart);\n\n      var timer = loopingFunction(function loop() {\n        if (i >= settings.list.length) {\n          stoppingFunction(timer);\n          sendEvent('wordcloudstop', false);\n          removeEventListener('wordcloudstart', anotherWordCloudStart);\n\n          return;\n        }\n        escapeTime = (new Date()).getTime();\n        var drawn = putWord(settings.list[i]);\n        var canceled = !sendEvent('wordclouddrawn', true, {\n          item: settings.list[i], drawn: drawn });\n        if (exceedTime() || canceled) {\n          stoppingFunction(timer);\n          settings.abort();\n          sendEvent('wordcloudabort', false);\n          sendEvent('wordcloudstop', false);\n          removeEventListener('wordcloudstart', anotherWordCloudStart);\n          return;\n        }\n        i++;\n        timer = loopingFunction(loop, settings.wait);\n      }, settings.wait);\n    };\n\n    // All set, start the drawing\n    start();\n  };\n\n  WordCloud.isSupported = isSupported;\n  WordCloud.minFontSize = minFontSize;\n\n  // Expose the library as an AMD module\n  if (typeof define === 'function' && define.amd) {\n    define('wordcloud', [], function() { return WordCloud; });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = WordCloud;\n  } else {\n    global.WordCloud = WordCloud;\n  }\n\n})(this); //jshint ignore:line","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n(function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['exports', 'echarts'], factory);\n    } else if (\n        typeof exports === 'object' &&\n        typeof exports.nodeName !== 'string'\n    ) {\n        // CommonJS\n        factory(exports, require('echarts'));\n    } else {\n        // Browser globals\n        factory({}, root.echarts);\n    }\n})(this, function(exports, echarts) {\n    var log = function(msg) {\n        if (typeof console !== 'undefined') {\n            console && console.error && console.error(msg);\n        }\n    };\n    if (!echarts) {\n        log('ECharts is not Loaded');\n        return;\n    }\n\n    var colorPalette = [\n        '#2ec7c9',\n        '#b6a2de',\n        '#5ab1ef',\n        '#ffb980',\n        '#d87a80',\n        '#8d98b3',\n        '#e5cf0d',\n        '#97b552',\n        '#95706d',\n        '#dc69aa',\n        '#07a2a4',\n        '#9a7fd1',\n        '#588dd5',\n        '#f5994e',\n        '#c05050',\n        '#59678c',\n        '#c9ab00',\n        '#7eb00a',\n        '#6f5553',\n        '#c14089'\n    ];\n\n    var theme = {\n        color: colorPalette,\n\n        title: {\n            textStyle: {\n                fontWeight: 'normal',\n                color: '#008acd'\n            }\n        },\n\n        visualMap: {\n            itemWidth: 15,\n            color: ['#5ab1ef', '#e0ffff']\n        },\n\n        toolbox: {\n            iconStyle: {\n                normal: {\n                    borderColor: colorPalette[0]\n                }\n            }\n        },\n\n        tooltip: {\n            backgroundColor: 'rgba(50,50,50,0.5)',\n            axisPointer: {\n                type: 'line',\n                lineStyle: {\n                    color: '#008acd'\n                },\n                crossStyle: {\n                    color: '#008acd'\n                },\n                shadowStyle: {\n                    color: 'rgba(200,200,200,0.2)'\n                }\n            }\n        },\n\n        dataZoom: {\n            dataBackgroundColor: '#efefff',\n            fillerColor: 'rgba(182,162,222,0.2)',\n            handleColor: '#008acd'\n        },\n\n        grid: {\n            borderColor: '#eee'\n        },\n\n        categoryAxis: {\n            axisLine: {\n                lineStyle: {\n                    color: '#008acd'\n                }\n            },\n            splitLine: {\n                lineStyle: {\n                    color: ['#eee']\n                }\n            }\n        },\n\n        valueAxis: {\n            axisLine: {\n                lineStyle: {\n                    color: '#008acd'\n                }\n            },\n            splitArea: {\n                show: true,\n                areaStyle: {\n                    color: ['rgba(250,250,250,0.1)', 'rgba(200,200,200,0.1)']\n                }\n            },\n            splitLine: {\n                lineStyle: {\n                    color: ['#eee']\n                }\n            }\n        },\n\n        timeline: {\n            lineStyle: {\n                color: '#008acd'\n            },\n            controlStyle: {\n                color: '#008acd',\n                borderColor: '#008acd'\n            },\n            symbol: 'emptyCircle',\n            symbolSize: 3\n        },\n\n        line: {\n            smooth: true,\n            symbol: 'emptyCircle',\n            symbolSize: 3\n        },\n\n        candlestick: {\n            itemStyle: {\n                color: '#d87a80',\n                color0: '#2ec7c9'\n            },\n            lineStyle: {\n                width: 1,\n                color: '#d87a80',\n                color0: '#2ec7c9'\n            },\n            areaStyle: {\n                color: '#2ec7c9',\n                color0: '#b6a2de'\n            }\n        },\n\n        scatter: {\n            symbol: 'circle',\n            symbolSize: 4\n        },\n\n        map: {\n            itemStyle: {\n                color: '#ddd'\n            },\n            areaStyle: {\n                color: '#fe994e'\n            },\n            label: {\n                color: '#d87a80'\n            }\n        },\n\n        graph: {\n            itemStyle: {\n                color: '#d87a80'\n            },\n            linkStyle: {\n                color: '#2ec7c9'\n            }\n        },\n\n        gauge: {\n            axisLine: {\n                lineStyle: {\n                    color: [\n                        [0.2, '#2ec7c9'],\n                        [0.8, '#5ab1ef'],\n                        [1, '#d87a80']\n                    ],\n                    width: 10\n                }\n            },\n            axisTick: {\n                splitNumber: 10,\n                length: 15,\n                lineStyle: {\n                    color: 'auto'\n                }\n            },\n            splitLine: {\n                length: 22,\n                lineStyle: {\n                    color: 'auto'\n                }\n            },\n            pointer: {\n                width: 5\n            }\n        }\n    };\n\n    echarts.registerTheme('macarons', theme);\n});\n","module.exports = require('./src/wordCloud');","require('echarts-wordcloud');\nimport 'echarts/theme/macarons.js'\nexport default {\n\tname: 'wordcloudindex',\n\tdata: () => ({\n\t\tword_cloud_view: null,\n\t\tword_cloud_options: {},\n\t\tword_list: [{\n \t\t\t    name: \"大三\",\n \t\t\t    value: \"666\"\n \t\t\t}, {\n \t\t\t    name: \"英语能力\",\n \t\t\t    value: \"520\"\n \t\t\t}, {\n \t\t\t    name: \"迟到\",\n \t\t\t    value: \"999\"\n \t\t\t}, {\n \t\t\t    name: \"雅思\",\n \t\t\t    value: \"888\"\n \t\t\t}, {\n \t\t\t    name: \"竞赛\",\n \t\t\t    value: \"777\"\n \t\t\t}, {\n \t\t\t    name: \"网络安全\",\n \t\t\t    value: \"688\"\n \t\t\t}, {\n \t\t\t    name: \"一次供水问题\",\n \t\t\t    value: \"588\"\n \t\t\t}, {\n \t\t\t    name: \"阅读\",\n \t\t\t    value: \"516\"\n \t\t\t}, {\n \t\t\t    name: \"会计师\",\n \t\t\t    value: \"515\"\n \t\t\t}, {\n \t\t\t    name: \"环境保护\",\n \t\t\t    value: \"483\"\n \t\t\t},{\n \t\t\t    name: \"大三\",\n \t\t\t    value: \"666\"\n \t\t\t}, {\n \t\t\t    name: \"英语能力\",\n \t\t\t    value: \"520\"\n \t\t\t}, {\n \t\t\t    name: \"迟到\",\n \t\t\t    value: \"999\"\n \t\t\t}, {\n \t\t\t    name: \"雅思\",\n \t\t\t    value: \"888\"\n \t\t\t}, {\n \t\t\t    name: \"竞赛\",\n \t\t\t    value: \"777\"\n \t\t\t}, {\n \t\t\t    name: \"网络安全\",\n \t\t\t    value: \"688\"\n \t\t\t}, {\n \t\t\t    name: \"一次供水问题\",\n \t\t\t    value: \"588\"\n \t\t\t}, {\n \t\t\t    name: \"阅读\",\n \t\t\t    value: \"516\"\n \t\t\t}, {\n \t\t\t    name: \"会计师\",\n \t\t\t    value: \"515\"\n \t\t\t}, {\n \t\t\t    name: \"环境保护\",\n \t\t\t    value: \"483\"\n \t\t\t}]\n\n\t}),\n\tmethods: {\n\t\tdraw_word_cloud_view() {\n\t\t\tif (this.word_cloud_view) {\n\t\t\t\tthis.word_cloud_view.dispose();\n\t\t\t}\n\t\t\tthis.word_cloud_view = document.getElementById('word_cloud_view_id') &&\n\t\t\t\tthis.$echarts.init(document.getElementById('word_cloud_view_id'), 'macarons');\n\t\t\tthis.word_cloud_view.showLoading();\t\n\t\t\tthis.word_cloud_view && this.word_cloud_view.setOption(this.word_cloud_options);\n\t\t\tthis.word_cloud_view.hideLoading();\n\t\t},\n\t\tinit_view_data() {\n\t\t\tlet word_cloud_series = [{\n\t\t\t\ttype: 'wordCloud',\n\t\t\t\tshape: 'circle',\n\t\t\t\t//maskImage: maskImage,\n\t\t\t\tleft: 'center',\n\t\t\t\ttop: 'center',\n\t\t\t\twidth: '100%',\n\t\t\t\theight: '100%',\n\t\t\t\tright: null,\n\t\t\t\tbottom: null,\n\t\t\t\tsizeRange: [6, 60],\n\t\t\t\trotationRange: [-45, 90],\n\t\t\t\tautoSize: {\n\t\t\t\t\tenable: true,\n\t\t\t\t\tminSize: 6\n\t\t\t\t},\n\t\t\t\ttextPadding: 0,\n\t\t\t\t// rotationStep: 45,\n\t\t\t\t// gridSize: 8,\n\t\t\t\tdrawOutOfBound: false,\n\t\t\t\ttextStyle: {\n\t\t\t\t\tnormal: {\n\t\t\t\t\t\tfontFamily: 'sans-serif',\n\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\t// Color can be a callback function or a color string\n\t\t\t\t\t\tcolor: function() {\n\t\t\t\t\t\t\t// Random color\n\t\t\t\t\t\t\treturn 'rgb(' + [\n\t\t\t\t\t\t\t\tMath.round(Math.random() * 256),\n\t\t\t\t\t\t\t\tMath.round(Math.random() * 256),\n\t\t\t\t\t\t\t\tMath.round(Math.random() * 256)\n\t\t\t\t\t\t\t].join(',') + ')';\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tshadowBlur: 10,\n\t\t\t\t\t\tshadowColor: '#333'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdata: this.word_list\n\t\t\t}]\n\n\t\t\tthis.word_cloud_options = {\n\t\t\t\tseries: word_cloud_series\n\t\t\t}\n\t\t\tthis.word_cloud_view.setOption(this.word_cloud_options)\n\t\t},\n\t},\n\tmounted() {\n\t\tthis.draw_word_cloud_view()\n\t\tthis.init_view_data()\n\t},\n\trender(h) {\n\t\treturn h('div', {\n\t\t\tattrs: {\n\t\t\t\tid: 'word_cloud_view_id'\n\t\t\t},\n\t\t\tstyle: {\n\t\t\t\theight: '90%'\n\t\t\t}\n\t\t})\n\t}\n}\n","var echarts = require('echarts/lib/echarts');\n\nfunction getShallow(model, path) {\n    return model && model.getShallow(path);\n}\n\necharts.extendChartView({\n\n    type: 'wordCloud',\n\n    render: function (seriesModel, ecModel, api) {\n        var group = this.group;\n        group.removeAll();\n\n        var data = seriesModel.getData();\n\n        var gridSize = seriesModel.get('gridSize');\n\n        seriesModel.layoutInstance.ondraw = function (text, size, dataIdx, drawn) {\n            var itemModel = data.getItemModel(dataIdx);\n            var textStyleModel = itemModel.getModel('textStyle.normal');\n            var emphasisTextStyleModel = itemModel.getModel('textStyle.emphasis');\n\n            var textEl = new echarts.graphic.Text({\n                style: echarts.graphic.setTextStyle({}, textStyleModel, {\n                    x: drawn.info.fillTextOffsetX,\n                    y: drawn.info.fillTextOffsetY + size * 0.5,\n                    text: text,\n                    textBaseline: 'middle',\n                    textFill: data.getItemVisual(dataIdx, 'color'),\n                    fontSize: size\n                }),\n                scale: [1 / drawn.info.mu, 1 / drawn.info.mu],\n                position: [\n                    (drawn.gx + drawn.info.gw / 2) * gridSize,\n                    (drawn.gy + drawn.info.gh / 2) * gridSize\n                ],\n                rotation: drawn.rot\n            });\n\n            group.add(textEl);\n\n            data.setItemGraphicEl(dataIdx, textEl);\n\n            echarts.graphic.setHoverStyle(\n                textEl,\n                echarts.graphic.setTextStyle({}, emphasisTextStyleModel, null, {forMerge: true}, true)\n            );\n        };\n\n        this._model = seriesModel;\n    },\n\n    remove: function () {\n        this.group.removeAll();\n\n        this._model.layoutInstance.dispose();\n    },\n\n    dispose: function () {\n        this._model.layoutInstance.dispose();\n    }\n});\n"],"sourceRoot":""}